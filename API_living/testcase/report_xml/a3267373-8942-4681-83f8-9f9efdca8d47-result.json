{"name": "test_living_getlist1[7]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'not uid fiel... cannot empty' == 'success'\n  - not uid field or uid cannot empty\n  + success", "trace": "line = 7\n\n    @pytest.mark.parametrize(\"line\", lines)#参数化\n    def test_living_getlist1(line):\n        excel_data = common.request_excel.open_excel(excel_file)\n        excel_data = list(excel_data[\"updateChannel\"][line])  # 依次取出列表中的元组\n        host = str(excel_data[2]) + \":\" + str(excel_data[3])\n        appid = excel_data[4]\n        url = excel_data[5]\n        check=excel_data[10]\n        excel_data[5] = url % (host, appid)\n        #print(excel_data[5])\n        redata = common.api_request.api_request_excel(excel_data)\n>       assert redata[\"message\"] == check\nE       AssertionError: assert 'not uid fiel... cannot empty' == 'success'\nE         - not uid field or uid cannot empty\nE         + success\n\ntestcase\\test_living_updateChannel.py:23: AssertionError"}, "attachments": [{"name": "log", "source": "3ea6c57a-7f89-404f-91a7-08165528886b-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "64b9d948-6dbe-4373-9048-ac57af3089c7-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "cdc59cf2-6d35-480e-b2a8-5e0749d03026-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "line", "value": "7"}], "start": 1561099784117, "stop": 1561099784181, "uuid": "0ca68b53-4b46-4109-bc0c-8c203e1897ee", "historyId": "f2a045e3f7501d651958ce46d3726f2f", "fullName": "testcase.test_living_updateChannel#test_living_getlist1[7]", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_living_updateChannel"}, {"name": "host", "value": "qiuqiu"}, {"name": "thread", "value": "17828-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_living_updateChannel"}]}