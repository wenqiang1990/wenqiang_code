{"name": "test_living_getlist1[1]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'not uid fiel... cannot empty' == 'success'\n  - not uid field or uid cannot empty\n  + success", "trace": "line = 1\n\n    @pytest.mark.parametrize(\"line\", lines)#参数化\n    def test_living_getlist1(line):\n        excel_data = common.request_excel.open_excel(excel_file)\n        excel_data = list(excel_data[\"updateChannel\"][line])  # 依次取出列表中的元组\n        host = str(excel_data[2]) + \":\" + str(excel_data[3])\n        appid = excel_data[4]\n        url = excel_data[5]\n        check=excel_data[10]\n        excel_data[5] = url % (host, appid)\n        #print(excel_data[5])\n        redata = common.api_request.api_request_excel(excel_data)\n>       assert redata[\"message\"] == check\nE       AssertionError: assert 'not uid fiel... cannot empty' == 'success'\nE         - not uid field or uid cannot empty\nE         + success\n\ntestcase\\test_living_updateChannel.py:23: AssertionError"}, "attachments": [{"name": "log", "source": "c1a1742c-e3fb-46ca-892a-efbf68f2d068-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "33c008c2-f821-4d81-8124-e68174bb9884-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "83a72993-12ed-41bb-ba0f-cc2e05c78847-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "line", "value": "1"}], "start": 1561099783667, "stop": 1561099783708, "uuid": "eee5ffb3-9b0f-4af1-b24a-3c1fbce25a02", "historyId": "3b4c35a6df2b2fa3625daa1757821b27", "fullName": "testcase.test_living_updateChannel#test_living_getlist1[1]", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_living_updateChannel"}, {"name": "host", "value": "qiuqiu"}, {"name": "thread", "value": "17828-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_living_updateChannel"}]}