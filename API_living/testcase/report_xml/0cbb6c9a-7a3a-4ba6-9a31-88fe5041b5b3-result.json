{"name": "test_living_getlist1[6]", "status": "failed", "statusDetails": {"message": "AssertionError: assert \"the value of...t':['test1']}\" == 'success'\n  - the value of the 'watermarks' field must be a dictionary type, ex: {'text':['test1']}\n  + success", "trace": "line = 6\n\n    @pytest.mark.parametrize(\"line\", lines)#参数化\n    def test_living_getlist1(line):\n        excel_data = common.request_excel.open_excel(excel_file)\n        excel_data = list(excel_data[\"updateChannel\"][line])  # 依次取出列表中的元组\n        host = str(excel_data[2]) + \":\" + str(excel_data[3])\n        appid = excel_data[4]\n        url = excel_data[5]\n        check=excel_data[10]\n        excel_data[5] = url % (host, appid)\n        #print(excel_data[5])\n        redata = common.api_request.api_request_excel(excel_data)\n>       assert redata[\"message\"] == check\nE       assert \"the value of...t':['test1']}\" == 'success'\nE         - the value of the 'watermarks' field must be a dictionary type, ex: {'text':['test1']}\nE         + success\n\ntestcase\\test_living_updateChannel.py:23: AssertionError"}, "attachments": [{"name": "log", "source": "da022062-03a3-403f-a2a2-b8a80f79bed1-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "a027a0b1-e2bf-4009-9100-9cdcfff1660e-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "38458be1-f62b-401a-8e55-b195789607ef-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "line", "value": "6"}], "start": 1564385130348, "stop": 1564385130417, "uuid": "457b896d-750b-4b6c-9a63-ddd9b6ff6575", "historyId": "e3d5bc38ad9f2246c556b44dc7ae2858", "fullName": "testcase.test_living_updateChannel#test_living_getlist1[6]", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_living_updateChannel"}, {"name": "host", "value": "qiuqiu"}, {"name": "thread", "value": "8896-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_living_updateChannel"}]}