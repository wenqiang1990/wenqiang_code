{"name": "test_living_getlist1[10]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'not uid fiel... cannot empty' == 'success'\n  - not uid field or uid cannot empty\n  + success", "trace": "line = 10\n\n    @pytest.mark.parametrize(\"line\", lines)#参数化\n    def test_living_getlist1(line):\n        excel_data = common.request_excel.open_excel(excel_file)\n        excel_data = list(excel_data[\"updateChannel\"][line])  # 依次取出列表中的元组\n        host = str(excel_data[2]) + \":\" + str(excel_data[3])\n        appid = excel_data[4]\n        url = excel_data[5]\n        check=excel_data[10]\n        excel_data[5] = url % (host, appid)\n        #print(excel_data[5])\n        redata = common.api_request.api_request_excel(excel_data)\n>       assert redata[\"message\"] == check\nE       AssertionError: assert 'not uid fiel... cannot empty' == 'success'\nE         - not uid field or uid cannot empty\nE         + success\n\ntestcase\\test_living_updateChannel.py:23: AssertionError"}, "attachments": [{"name": "log", "source": "fed0ffb6-11ab-471c-848d-e5cf123aecde-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "951ac083-ea77-4a1f-85ed-645f3d393815-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "5db078a6-c522-4e6c-8460-5d7a7226fe4a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "line", "value": "10"}], "start": 1561099784382, "stop": 1561099784430, "uuid": "346243da-9f94-46e4-89ee-ca29a389b8f0", "historyId": "da9ded9c2cf80894e44783aa270bc076", "fullName": "testcase.test_living_updateChannel#test_living_getlist1[10]", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_living_updateChannel"}, {"name": "host", "value": "qiuqiu"}, {"name": "thread", "value": "17828-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_living_updateChannel"}]}