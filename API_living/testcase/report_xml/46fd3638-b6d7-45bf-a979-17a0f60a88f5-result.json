{"name": "test_living_getlist1[11]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'not uid fiel... cannot empty' == 'success'\n  - not uid field or uid cannot empty\n  + success", "trace": "line = 11\n\n    @pytest.mark.parametrize(\"line\", lines)#参数化\n    def test_living_getlist1(line):\n        excel_data = common.request_excel.open_excel(excel_file)\n        excel_data = list(excel_data[\"updateChannel\"][line])  # 依次取出列表中的元组\n        host = str(excel_data[2]) + \":\" + str(excel_data[3])\n        appid = excel_data[4]\n        url = excel_data[5]\n        check=excel_data[10]\n        excel_data[5] = url % (host, appid)\n        #print(excel_data[5])\n        redata = common.api_request.api_request_excel(excel_data)\n>       assert redata[\"message\"] == check\nE       AssertionError: assert 'not uid fiel... cannot empty' == 'success'\nE         - not uid field or uid cannot empty\nE         + success\n\ntestcase\\test_living_updateChannel.py:23: AssertionError"}, "attachments": [{"name": "log", "source": "78933df1-9bad-4619-b7a6-fbcab87c8450-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "7b1a4c2d-2213-4dc6-9906-08b34dbcbc7c-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "f018209b-3939-4e67-a429-ea5d8062c6d3-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "line", "value": "11"}], "start": 1561099784458, "stop": 1561099784504, "uuid": "5b6fc917-049a-467f-9597-ea009f5b398b", "historyId": "83593275e8669b6667ed0b9068988c68", "fullName": "testcase.test_living_updateChannel#test_living_getlist1[11]", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_living_updateChannel"}, {"name": "host", "value": "qiuqiu"}, {"name": "thread", "value": "17828-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_living_updateChannel"}]}